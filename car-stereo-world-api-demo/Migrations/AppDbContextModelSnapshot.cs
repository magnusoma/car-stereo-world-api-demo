// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using car_stereo_world_api_demo.Data;

namespace car_stereo_world_api_demo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("car_stereo_world_api_demo.Data.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("car_stereo_world_api_demo.Data.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AvailableFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AvailableUntil")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("ComponentSeriesId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PriceNew")
                        .HasColumnType("float");

                    b.Property<double>("Value100")
                        .HasColumnType("float");

                    b.Property<double>("Value20")
                        .HasColumnType("float");

                    b.Property<double>("Value40")
                        .HasColumnType("float");

                    b.Property<double>("Value60")
                        .HasColumnType("float");

                    b.Property<double>("Value80")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ComponentSeriesId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("car_stereo_world_api_demo.Data.Models.ComponentSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProducedFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProducedUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("ComponentSeries");
                });

            modelBuilder.Entity("car_stereo_world_api_demo.Data.Models.Component", b =>
                {
                    b.HasOne("car_stereo_world_api_demo.Data.Models.Brand", "Brand")
                        .WithMany("Components")
                        .HasForeignKey("BrandId");

                    b.HasOne("car_stereo_world_api_demo.Data.Models.ComponentSeries", "ComponentSeries")
                        .WithMany("Components")
                        .HasForeignKey("ComponentSeriesId");

                    b.Navigation("Brand");

                    b.Navigation("ComponentSeries");
                });

            modelBuilder.Entity("car_stereo_world_api_demo.Data.Models.ComponentSeries", b =>
                {
                    b.HasOne("car_stereo_world_api_demo.Data.Models.Brand", "Brand")
                        .WithMany("ComponentSeries")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("car_stereo_world_api_demo.Data.Models.Brand", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("ComponentSeries");
                });

            modelBuilder.Entity("car_stereo_world_api_demo.Data.Models.ComponentSeries", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
